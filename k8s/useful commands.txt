
    Apply
        -> namespace.yml

    -> helm repo add https://aws.github.io/eks-charts
    -> helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
    -> helm repo add aws-ebs-csi-driver https://kubernetes-sigs.github.io/aws-ebs-csi-driver/
    -> helm repo add grafana https://grafana.github.io/helm-charts
    -> prometheus-prometheus-pushgateway.monitoring.svc.cluster.local
    -> helm repo update

FARGATE
    -> deployments.yaml
    -> service-account.yaml
    -> helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=Flaming --set serviceAccount.create=false --set region=us-east-1 --set vpcId=vpc-0ccbc3d421d7a5d97 --set serviceAccount.name=aws-load-balancer-controller
    -> services.yaml
    -> ingress.yaml

PROMETHEUS
    -> kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
    -> helm install aws-ebs-csi-driver aws-ebs-csi-driver/aws-ebs-csi-driver --namespace kube-system
    
    Apply
        -> pv.yaml
    -> helm install prometheus prometheus-community/prometheus --namespace monitoring --set alertmanager.persistentVolume.storageClass="gp2" --set server.persistentVolume.storageClass="gp2"

    To expose 
        -> kubectl edit svc prometheus-server -n monitoring
        -> Change type to NodePort

    To expose locally
        -> kubectl port-forward -n monitoring svc/prometheus-server 9090:80

GRAFANA
    -> helm install potato-grafana grafana/grafana --namespace monitoring --values ./grafana.yaml

    To expose 
        -> kubectl edit svc potato-grafana -n monitoring
        -> Change type to NodePort
    
TROUBLESHOOTING
    To verify if there is connectivity from within the cluster
        -> kubectl run -it --rm --image=alpine debug --namespace=flaming -- sh
            -> wget -qO- http://10.0.10.2:80
    -> kubectl logs <POD_NAME> -n <NAMESPACE>
    -> kubectl describe <Type>/<POD_NAME> -n <NAMESPACE>
    -> kubectl get pvc -n <namespace>

To view subnet ip usage
 -> aws ec2 describe-network-interfaces --filters Name=subnet-id,Values=subnet-0c774a010fc4bd528